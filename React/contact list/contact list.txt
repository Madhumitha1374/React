contact list

https://MARTHALAcONTACT.ccbp.tech



//app.js

import {Component} from 'react'
import {v4 as uuidv4} from 'uuid'

import ContactItem from './components/ContactItem'

import './App.css'

const initialContactsList = [
  {
    id: uuidv4(),
    name: 'Ram',
    mobileNo: 9999988888,
    isFavorite: false,
  },
  {
    id: uuidv4(),
    name: 'Pavan',
    mobileNo: 8888866666,
    isFavorite: true,
  },
  {
    id: uuidv4(),
    name: 'Nikhil',
    mobileNo: 9999955555,
    isFavorite: false,
  },
]

class App extends Component {
  state = {
    contactsList: initialContactsList,
    name: '',
    mobileNo: '',
  }

  onAddContact = event => {
    event.preventDefault()
  }

  onChangeMobileNo = event => {
    this.setState({mobileNo: event.target.value})
  }

  onChangeName = event => {
    this.setState({name: event.target.value})
  }

  addContact = event => {
    event.preventDefault()
    const {mobileNo, name} = this.state
    const newContact = {
      id: uuidv4(),
      name,
      mobileNo,
      isFavorite: false,
    }
    this.setState(prevState => ({
      contactsList: [...prevState.contactsList, newContact],
      name: '',
      mobileNo: '',
    }))
  }

  toggleFavoriteIcon = id => {
    this.setState(prevState => ({
      contactsList: prevState.contactsList.map(eachItem => {
        if (eachItem.id === id) {
          return {...eachItem, isFavorite: !eachItem.isFavorite}
        }
        return eachItem
      }),
    }))
    console.log(id)
  }

  render() {
    const {name, mobileNo, contactsList} = this.state
    return (
      <div className="app-container">
        <div className="responsive-container">
          <h1 className="heading">Contacts</h1>
          <form className="contact-form-container" onSubmit={this.onAddContact}>
            <input
              value={name}
              onChange={this.onChangeName}
              className="input"
              placeholder="Name"
            />
            <input
              className="input"
              value={mobileNo}
              onChange={this.onChangeMobileNo}
              placeholder="Mobile Number"
            />
            <button type="submit" className="button" onClick={this.addContact}>
              Add Contact
            </button>
          </form>
          <ul className="contacts-table">
            <li className="table-header">
              <p className="table-header-cell name-column">Name</p>
              <hr className="separator" />
              <p className="table-header-cell">Mobile Number</p>
            </li>
            {contactsList.map(eachContact => (
              <ContactItem
                key={eachContact.id}
                contactDetails={eachContact}
                toggleFavoriteIcon={this.toggleFavoriteIcon}
              />
            ))}
          </ul>
        </div>
      </div>
    )
  }
}

export default App



//app.css

* {
  box-sizing: border-box;
}

.app-container {
  display: flex;
  justify-content: center;
  min-height: 100vh;
}

.responsive-container {
  width: 80%;
  max-width: 1140px;
}

.heading {
  color: #1e293b;
  font-family: 'Roboto';
  font-size: 32px;
  font-weight: 500;
  margin-top: 96px;
  margin-bottom: 32px;
}

.contact-form-container {
  display: flex;
}

@media screen and (max-width: 575px) {
  .contact-form-container {
    flex-direction: column;
  }
}

.input {
  color: #1e293b;
  font-family: 'Roboto';
  border: 1px solid #d7dfe9;
  border-radius: 2px;
  width: 28%;
  height: 48px;
  padding-left: 16px;
  margin-right: 15px;
  outline: none;
  margin-bottom: 10px;
  flex-grow: 1;
  max-width: 320px;
}

@media screen and (max-width: 575px) {
  .input {
    width: 280px;
  }
}

.button {
  background-color: #0ea5e9;
  color: #ffffff;
  font-family: 'Roboto';
  font-size: 14px;
  border-radius: 6px;
  border: none;
  padding-left: 24px;
  padding-top: 12px;
  padding-bottom: 12px;
  padding-right: 24px;
  outline: none;
  cursor: pointer;
  margin-bottom: 10px;
}

@media screen and (max-width: 575px) {
  .button {
    width: 200px;
  }
}

.contacts-table {
  padding-left: 0;
  margin-top: 48px;
}

.table-header {
  display: flex;
  background-color: #f1f5f9;
  list-style-type: none;
  border: 1px solid #cbd5e1;
}

.table-header-cell {
  color: #334155;
  font-family: 'Roboto';
  font-size: 16px;
  font-weight: 500;
  margin-left: 32px;
}

.name-column {
  width: 33%;
  border-right: none;
}

.separator {
  margin: 0;
  border: 1px solid #cbd5e1;
}




//contact item index.js

import './index.css'

const ContactItem = props => {
  const {contactDetails, toggleFavoriteIcon} = props
  const {name, mobileNo, isFavorite, id} = contactDetails

  const onCLickToggleIcon = () => {
    toggleFavoriteIcon(id)
  }

  const starImgUrl = isFavorite
    ? 'https://assets.ccbp.in/frontend/react-js/star-filled-img.png'
    : 'https://assets.ccbp.in/frontend/react-js/star-outline-img.png'

  return (
    <li className="table-row">
      <div className="table-cell name-column">
        <p>{name}</p>
      </div>
      <hr className="separator" />
      <div className="table-cell mobile-no-column">
        <p className="mobile-no-value">{mobileNo}</p>
        <button type="button" className="favorite-icon-container">
          <img
            src={starImgUrl}
            className="favorite-icon"
            alt="star"
            onClick={onCLickToggleIcon}
          />
        </button>
      </div>
    </li>
  )
}

export default ContactItem


//index.css

.table-row {
  display: flex;
  list-style-type: none;
  border-left: 1px solid #cbd5e1;
  border-bottom: 1px solid #cbd5e1;
  border-right: 1px solid #cbd5e1;
}

.table-cell {
  color: #1e293b;
  font-family: 'Roboto';
  font-size: 16px;
  margin-left: 32px;
  display: flex;
  align-items: center;
}

.name-column {
  width: 33%;
}

.mobile-no-column {
  flex-grow: 1;
}

.mobile-no-value {
  flex-grow: 1;
}

.favorite-icon-container {
  background: transparent;
  outline: none;
  border: none;
  cursor: pointer;
}

.favorite-icon {
  background: transparent;
  margin-right: 24px;
  align-self: center;
  border: none;
  outline: none;
}
