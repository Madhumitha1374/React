githubpopularrepos


import {Component} from 'react'
import Loader from 'react-loader-spinner'
import LanguageFiltersItem from '../LanguageFilterItem/index'
import RepositoryItem from '../RepositoryItem/index'

import './index.css'

const languageFiltersData = [
  {id: 'ALL', language: 'All'},
  {id: 'JAVASCRIPT', language: 'Javascript'},
  {id: 'RUBY', language: 'Ruby'},
  {id: 'JAVA', language: 'Java'},
  {id: 'CSS', language: 'CSS'},
]

// Write your code here

class GithubPopularRepos extends Component {
  state = {id: 'ALL', reposList: [], isLoading: true}

  onLangItemChange = id => {
    console.log('clicked')
    this.setState({id}, this.getRepoItems)
  }

  renderLoader = () => (
    <div className="products-loader-container">
      <Loader type="ThreeDots" color="#0b69ff" height="50" width="50" />
    </div>
  )

  componentDidMount = () => {
    this.getRepoItems()
  }

  getRepoItems = async () => {
    const {id} = this.state
    const url = `https://apis.ccbp.in/popular-repos?language=${id}`
    const options = {
      method: 'GET',
    }
    const response = await fetch(url, options)
    const data = await response.json()
    console.log(data)
    const updatedList = data.popular_repos.map(item => ({
      name: item.name,
      id: item.id,
      starsCount: item.stars_count,
      forksCount: item.forks_count,
      avatarUrl: item.avatar_url,
      issuesCount: item.issues_count,
    }))
    this.setState({reposList: updatedList, isLoading: false})
  }

  render() {
    const {reposList, isLoading} = this.state
    return isLoading ? (
      this.renderLoader
    ) : (
      <div>
        <h1>Popular</h1>
        <ui className="laguageItem">
          {languageFiltersData.map(each => (
            <LanguageFiltersItem
              languageFiltersItem={each}
              id={each.id}
              onLangItemChange={this.onLangItemChange}
            />
          ))}
        </ui>
        <ui className="laguageItem2">
          {reposList.map(each => (
            <RepositoryItem repositoryItem={each} id={each.id} />
          ))}
        </ui>
      </div>
    )
  }
}

export default GithubPopularRepos





repositoryItem

// Write your code here
import './index.css'

const RepositoryItem = props => {
  const {repositoryItem} = props
  const {name, starsCount, forksCount, avatarUrl, issuesCount} = repositoryItem
  return (
    <li>
      <img src={avatarUrl} alt="avatar" className="avatar" />
      <p>{name}</p>
      <p>{starsCount}</p>
      <p>{forksCount}</p>
      <p>{issuesCount}</p>
    </li>
  )
}

export default RepositoryItem




languageFilterItem

// Write your code here
import './index.css'

const LanguageFiltersItem = props => {
  const {languageFiltersItem, onLangItemChange} = props
  const {language, id} = languageFiltersItem

  const onClickLangitem = () => {
    onLangItemChange(id)
  }

  return (
    <li className="item" onClick={onClickLangitem}>
      <p>{language}</p>
    </li>
  )
}

export default LanguageFiltersItem
